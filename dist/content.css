.AlwaysShowsDatabaseMenubar {
  :has(> .notion-collection-view-item-add) {
    opacity: 1 !important;

    .notion-collection-view-item-add {
      --AlwaysShowsDatabaseMenubar-color: rgba(55, 53, 47, 0.45);
      --AlwaysShowsDatabaseMenubar-border: rgb(233, 233, 231);
      --AlwaysShowsDatabaseMenubar-hover-bg: rgba(55, 53, 47, 0.06);
      @media (prefers-color-scheme: dark) {
        --AlwaysShowsDatabaseMenubar-color: rgba(255, 255, 255, 0.443);
        --AlwaysShowsDatabaseMenubar-border: rgb(47, 47, 47);
        --AlwaysShowsDatabaseMenubar-hover-bg: rgba(255, 255, 255, 0.055);
      }

      svg {
        fill: var(--AlwaysShowsDatabaseMenubar-color) !important;
      }

      border: 1px solid var(--AlwaysShowsDatabaseMenubar-border) !important;

      > * {
        background: none !important;
        color: var(--AlwaysShowsDatabaseMenubar-color) !important;
        border-color: var(--AlwaysShowsDatabaseMenubar-border) !important;

        &:hover {
          background: var(--AlwaysShowsDatabaseMenubar-hover-bg) !important;
        }
      }
    }
  }
}

.notion-gallery-view .notion-collection-item > a[href^="/"] {
  .AddPinnedIndicatorToGallery-hideCheckbox & {
    > :nth-child(3) > :first-child:has(input[type="checkbox"]) {
      display: none !important;
    }
  }

  .AddPinnedIndicatorToGallery & {
    > :nth-child(2):has(+ * :is(input[checked], .roundedCheck)) {
      --AddPinnedIndicatorToGallery-color: rgba(55, 53, 47, 0.2);
      @media (prefers-color-scheme: dark) {
        --AddPinnedIndicatorToGallery-color: rgba(255, 255, 255, 0.15);
      }

      /* needed when titles are at the bottom */
      overflow: hidden;

      &::before,
      &::after {
        content: "";
        position: absolute;
        top: 0;
        right: 0;
        height: 3rem;
        aspect-ratio: 1 / 1;
        border-top: 3px solid var(--AddPinnedIndicatorToGallery-color);
        transform: rotate(45deg);
      }

      &::before {
        right: 0.6rem;
      }
    }
  }

  .MakeGalleryPreivewFontSizeAllTheSame & {
    > :first-child :has(> [contenteditable]) * {
      font-size: 0.75rem !important;
      width: fit-content !important;
    }
  }

  .PlaceGalleryPreviewAtTheBottom & {
    > :first-child {
      order: 1;
    }

    height: 12rem !important;

    > :is(:nth-child(n + 2)) {
      flex-shrink: 0;
    }

    > :first-child {
      flex-grow: 1;

      > :first-child {
        height: 100%;

        > * {
          height: 100% !important;
          padding-top: 4px !important;

          img:only-child[src^="/"] {
            height: 100% !important;
          }
        }
      }
    }
  }

  .RestrictGalleryTitleLength & {
    > :nth-child(2) {
      max-height: 6rem;
      overflow: hidden;
    }
  }

  .RemoveHoverMenuFromGalleryView & {
    > :first-child > :last-child {
      display: none !important;
    }
  }
}

.notion-board-view a[href^="/"] {
  .RemoveHoverMenuFromBoardView & {
    > :first-child > :last-child {
      display: none !important;
    }
  }
}

.ShrinkCoverImageArea {
  .whenContentEditable {
    --ShrinkCoverImageArea-max-height: 150px;

    --ShrinkCoverImageArea-bg: 255, 255, 255;
    @media (prefers-color-scheme: dark) {
      --ShrinkCoverImageArea-bg: 25, 25, 25;
    }

    .notion-peek-renderer & {
      @media (prefers-color-scheme: dark) {
        --ShrinkCoverImageArea-bg: 32, 32, 32;
      }
    }

    /* [aria-hidden="false"] appears when repositioning */
    .layout-full:not(:has([aria-hidden="false"])) + .layout-content {
      .notion-record-icon {
        margin-top: 10px !important;

        &,
        :not(:has(> * > [role="progressbar"]) *) {
          height: var(--ShrinkCoverImageArea-icon-size) !important;
          width: var(--ShrinkCoverImageArea-icon-size) !important;

          display: flex;
          align-items: center;
          justify-content: center;
        }

        :has(> * > [role="progressbar"]) {
          inset: 0 !important;
        }

        img:not([role="progressbar"]) {
          height: var(--ShrinkCoverImageArea-icon-img-scale) !important;
          width: var(--ShrinkCoverImageArea-icon-img-scale) !important;
        }

        :has(> [role="img"]) {
          font-size: var(--ShrinkCoverImageArea-icon-size) !important;

          [role="img"] {
            font-size: var(--ShrinkCoverImageArea-icon-img-scale) !important;
          }
        }
      }
    }

    /* icon and title with no cover */
    .layout-full:not(:has(img)) + .layout-content {
      padding-bottom: 0 !important;
      margin-top: 30px;
      margin-bottom: 0px !important;

      .notion-record-icon {
        --ShrinkCoverImageArea-icon-size: 50px;
        --ShrinkCoverImageArea-icon-img-scale: 100%;
      }

      /* if properties table exists, put some gap */
      &:has(+ .layout-content [role="table"]) {
        margin-bottom: 15px !important;
      }

      /* put title on the right of the icon (if icon exists) */
      :has(> .pseudoSelection .notion-record-icon) {
        display: flex;
        align-items: center;

        .pseudoSelection {
          margin-right: 0.7rem;
        }

        /* grow title clickable area */
        .pseudoSelection + :has(h1) {
          flex-grow: 1;
        }
      }

      /* put buttons over the title */
      :has(> .pseudoSelection) {
        position: relative;

        .notion-page-controls {
          position: absolute;
          top: -27px;
          padding: 0 !important;
        }
      }
    }

    /* icon and title with cover */
    .layout-full:has(img):not(:has([aria-hidden="false"])) + .layout-content {
      &,
      & + .layout-content {
        z-index: 1;
      }

      .notion-record-icon {
        --ShrinkCoverImageArea-icon-size: 100px;
        --ShrinkCoverImageArea-icon-img-scale: 80%;
      }

      /* put some margin not to props or page content
     * be overlapped by cover (if icon not exsists) */
      &:not(:has(.notion-record-icon)) {
        margin-bottom: min(7vh, 35px) !important;
      }

      /* put buttons on the right of the icon (if icon exsists) */
      .pseudoSelection:has(.notion-record-icon) {
        display: flex;
        align-items: end;
        gap: 1rem;
      }

      .notion-page-controls > [role="button"]:hover {
        background-color: rgb(var(--ShrinkCoverImageArea-bg)) !important;
      }
    }

    /* cover style */
    .layout-full:has(img):not(:has([aria-hidden="false"])) > * > :first-child {
      position: absolute !important;
      z-index: -1 !important;

      &,
      * {
        max-height: var(--ShrinkCoverImageArea-max-height) !important;
      }

      /* cover config buttons placement */
      & > :last-child > :first-child {
        margin: 0 !important;
        flex-direction: column;
        bottom: unset !important;
      }

      :has(> img) {
        position: relative;

        /* add gradation to make icon and title easy to see */
        &:before {
          content: "";
          position: absolute;
          width: 100%;
          height: 100%;
          inset: 0;
          background: linear-gradient(
            90deg,
            rgb(var(--ShrinkCoverImageArea-bg)),
            60%,
            rgba(var(--ShrinkCoverImageArea-bg), 0)
          );
        }

        /* blur bottom edge of cover */
        &:after {
          content: "";
          position: absolute;
          width: 200%;
          height: 200%;
          left: -50%;
          bottom: 0;
          box-shadow: inset 0px 0px 15px 15px
            rgb(var(--ShrinkCoverImageArea-bg));
        }
      }
    }

    /* indicate shrinked cover area when repositioning */
    .layout-full:has(img):has([aria-hidden="false"]) :has(> img) {
      position: relative;

      &:before {
        content: "";
        position: absolute;
        width: 100%;
        height: calc(30vh);
        max-height: calc(var(--ShrinkCoverImageArea-max-height));
        top: 50%;
        left: 50%;
        transform: translate(-50%, calc(-50%));
        border: 3px solid white;
        mix-blend-mode: difference;
      }
    }

    /* some blocks have large margin-top, so shrink them */
    .notion-page-content > :first-child {
      margin-top: 5px !important;
    }
  }
}

.RemovePlaceholderOnEmptyLine {
  .notion-page-content
    .notion-text-block
    [placeholder]:not([placeholder=" "])::after {
    content: " " !important;
  }
}

.AddIndentationLinesToIndentedItems {
  --AddIndentationLinesToIndentedItems-color: rgba(55, 53, 47, 0.16);
  @media (prefers-color-scheme: dark) {
    --AddIndentationLinesToIndentedItems-color: rgba(255, 255, 255, 0.13);
  }

  :is(
      .notion-bulleted_list-block,
      .notion-to_do-block,
      .notion-numbered_list-block
    ) {
    position: relative;

    &::before {
      content: "";
      position: absolute;
      height: calc(100% - 2.2em);
      top: 2em;
      left: 0.83em;
      width: 1px;
      background-color: var(--AddIndentationLinesToIndentedItems-color);
    }
  }

  .notion-text-block > * > :has(> [data-block-id]) {
    position: relative;

    &::before {
      content: "";
      position: absolute;
      height: calc(100% - 0.2em);
      top: 0;
      left: 0.3em;
      width: 1px;
      background-color: var(--AddIndentationLinesToIndentedItems-color);
    }
  }
}

.ShowPropertiesInSingleLine {
  .whenContentEditable
    .layout-content:not(:has(.notion-page-content)):has(
      [role="table"][aria-label]
    ) {
    padding: 0 !important;
    overflow-y: auto;

    /* not(...) prevents empty checkboxes from disappearing */
    *:not(:has(> * > input[type="checkbox"]) *) {
      display: inline-flex !important;
      align-items: center !important;
      flex-wrap: nowrap !important;
      width: fit-content !important;
      white-space: nowrap !important;
      margin: 0 !important;
      padding: 0 !important;
      gap: 10px !important;

      [role="row"] {
        --ShowPropertiesInSingleLine-border-color: #37352f17;
        @media (prefers-color-scheme: dark) {
          --ShowPropertiesInSingleLine-border-color: hsla(0, 0%, 100%, 0.094);
        }
        padding-right: 10px !important;
        border-right: 1px solid var(--ShowPropertiesInSingleLine-border-color) !important;
      }

      [role="button"],
      [role="cell"] * {
        gap: 1px !important;

        span:not(:has(*)) {
          padding: 0.5em !important;
        }
      }

      position: static !important; /* for quickActionContainer */
      [role="button"]:has(.quickActionContainer),
      .quickActionContainer {
        gap: 5px !important;
      }
      div:has(> .quickActionContainer) {
        order: 1;
      }

      .dragHandle {
        display: none !important;
      }
    }
  }
}

#notion-app {
  --AlwaysShowSyncedBlockBorder-container-color: rgb(227, 134, 118);
  --AlwaysShowSyncedBlockBorder-reference-color: rgb(200, 200, 200);
  @media (prefers-color-scheme: dark) {
    --AlwaysShowSyncedBlockBorder-container-color: rgb(110, 54, 48);
    --AlwaysShowSyncedBlockBorder-reference-color: rgb(100, 100, 100);
  }

  &.AlwaysShowSyncedBlockBorder-makeBorderMonochrome {
    --AlwaysShowSyncedBlockBorder-container-color: rgb(100, 100, 100);
    @media (prefers-color-scheme: dark) {
      --AlwaysShowSyncedBlockBorder-container-color: rgb(200, 200, 200);
    }
  }

  .notion-transclusion-block-halo {
    display: none;
  }

  :is(
      .notion-transclusion_container-block,
      .notion-transclusion_reference-block
    ):has(.notion-transclusion-block-component) {
    border-width: 2px;
    border-style: solid;
    border-radius: 8px;
    padding-left: 5px;
    padding-right: 5px;

    &.notion-transclusion_container-block {
      border-color: var(--AlwaysShowSyncedBlockBorder-container-color);
    }

    &.notion-transclusion_reference-block {
      border-color: var(--AlwaysShowSyncedBlockBorder-reference-color);
    }
  }
}

.RemoveNotionAI {
  .notion-ai-button,
  .notion-sidebar a[href="/chat"],
  [role="option"]:has([alt="Notion AI Face"]),
  [role="menuitem"]:has([alt="Notion AI Face"]),
  [role="menuitem"]:has([alt="Notion AI face"]),
  .notion-text-action-menu
    [role="button"]:has(
      :is(.aiExplainThis, .aiImproveWriting, [alt="Notion AI Face"])
    ),
  .notion-text-action-menu
    [role="button"]:has(
      :is(.aiExplainThis, .aiImproveWriting, [alt="Notion AI Face"])
    )
    + :empty /* border line after ai section */,
  .notion-image-block [role="button"][aria-label*="AI"] {
    display: none !important;
  }
}

.AddKeymapsToCreateNewItemInDB__Loading {
  --AddKeymapsToCreateNewItemInDB__Loading-bg: white;
  @media (prefers-color-scheme: dark) {
    --AddKeymapsToCreateNewItemInDB__Loading-bg: rgb(25, 25, 25);
  }

  position: fixed;
  inset: 0;
  width: 100vw;
  height: 100vh;
  background-color: var(--AddKeymapsToCreateNewItemInDB__Loading-bg);

  display: flex;
  justify-content: center;
  align-items: center;

  > img {
    width: 30px;
    height: 30px;
  }
}
